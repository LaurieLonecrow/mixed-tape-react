{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, useLocation } from 'react-router-dom'; //stylesheet\n\nimport { GlobalStyle } from \"./GlobalStyle\"; //components\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Grid from \"./components/Grid\";\nimport Tracks from \"./components/Tracks\";\nimport { accessToken } from './config';\nimport { getUser } from \"./APIs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [access, setAccess] = useState(null);\n  const [user, setUser] = useState(null);\n  const [events, setEvents] = useState([]);\n\n  const getAllEvents = async () => {\n    await fetch('http://localhost:3001/events').then(res => res.json()).then(data => setEvents(data));\n  };\n\n  const createEvent = async newEvent => {\n    const request = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    };\n    await fetch('http://localhost:3001/events', request).then(res => res.text()).then(event => setEvents(eventList => [...eventList, event]));\n    getAllEvents();\n  };\n\n  useEffect(() => {\n    getAllEvents();\n  }, []);\n  useEffect(() => {\n    setAccess(accessToken);\n\n    const getUserData = async () => {\n      const response = await getUser();\n      setUser(response.data);\n      console.log(response.data);\n    };\n\n    getUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [!user ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/playlists\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/playlist/:id\",\n        children: /*#__PURE__*/_jsxDEV(Tracks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"cyIyniWhtqwMRY2SEPpiXrjv05g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Switch","Route","useLocation","GlobalStyle","Home","Login","Grid","Tracks","accessToken","getUser","App","access","setAccess","user","setUser","events","setEvents","getAllEvents","fetch","then","res","json","data","createEvent","newEvent","request","method","headers","body","JSON","stringify","text","event","eventList","getUserData","response","console","log"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\n\nimport { BrowserRouter as Router, \n  Switch, \n  Route, \n  useLocation } from 'react-router-dom';\n\n  //stylesheet\nimport { GlobalStyle } from \"./GlobalStyle\";\n\n//components\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\"\nimport Grid from \"./components/Grid\";\nimport Tracks from \"./components/Tracks\";\n\nimport { accessToken } from './config';\nimport { getUser } from \"./APIs\"\n\n\nconst App = () => {\n  const [access, setAccess] = useState(null);\n  const [user, setUser] = useState(null)\n  const [events, setEvents] =useState([]);\n\n\n  const getAllEvents = async () => {\n    await fetch('http://localhost:3001/events')\n    .then(res => res.json())\n    .then(data => setEvents(data))\n  \n}\n  \n  const createEvent = async (newEvent) => {\n    const request ={\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(newEvent)\n    }\n    await fetch('http://localhost:3001/events', request)\n        .then(res => res.text())\n        .then((event) => setEvents(eventList => [...eventList, event]));\n        getAllEvents();\n  }\n\n\n  useEffect(() => {\n    getAllEvents();\n  },[])\n\n\n  useEffect(() => {\n    setAccess(accessToken)\n    const getUserData = async () => {\n      const response = await getUser();\n      setUser(response.data)\n      console.log(response.data)\n    }\n    getUserData();\n  },[])\n\n return (\n  <Router>\n        {!user ? <Login/> :\n\n          <Switch>\n            <Route path=\"/search\"/>\n            <Route path=\"/playlists\"><Grid/></Route>\n            <Route path=\"/playlist/:id\"><Tracks/></Route> \n            <Route path=\"/\"><Home/></Route>\n        </Switch>\n}\n      <GlobalStyle />\n  </Router>\n\n )\n  \n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}