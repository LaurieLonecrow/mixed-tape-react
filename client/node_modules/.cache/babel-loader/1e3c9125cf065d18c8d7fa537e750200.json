{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { accessToken } from \"../../config\";\nimport { Wrapper, Content } from \"./Grid.styles.js\";\nimport Playlist from \"../Playlist/index.js\"; // import SpotifyWebApi from \"spotify-web-api-js\";\n// const spotify = new SpotifyWebApi();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  playlists\n}) => {\n  //   const [playlists, setPlaylists] = useState(null);\n  //   const getPlaylists = async() => {\n  //     try {\n  //       await spotify.getUserPlaylists()\n  //       .then((playlists) => {\n  //         setPlaylists(playlists.items);\n  //       });\n  //     } catch (e) {\n  //         console.log('error in playlist loading', e)\n  //     } \n  // } \n  // useEffect(()=> {\n  //     spotify.setAccessToken(accessToken);\n  //     getPlaylists();\n  // }, []);\n  console.log(playlists);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [playlists, playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n        name: playlist.name,\n        onClick: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${playlist.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js"],"names":["useState","useEffect","Link","accessToken","Wrapper","Content","Playlist","Grid","playlists","console","log","map","playlist","name","id"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AAEA,OAAOC,QAAP,MAAqB,sBAArB,C,CAEA;AACA;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAGA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,OAAD;AAAA,iBACGA,SADH,EAECA,SAAS,CAACG,GAAV,CAAcC,QAAQ,iBACb,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,QAAQ,CAACC,IAFjB;AAGE,QAAA,OAAO,eACL,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,IAAGD,QAAQ,CAACE,EAAG;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJJ,SACOF,QAAQ,CAACE,EADhB;AAAA;AAAA;AAAA;AAAA,cADT,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeC,CAtCD;;KAAMP,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { accessToken } from \"../../config\"\n\nimport { Wrapper, Content } from \"./Grid.styles.js\";\n\nimport Playlist from \"../Playlist/index.js\";\n\n// import SpotifyWebApi from \"spotify-web-api-js\";\n// const spotify = new SpotifyWebApi();\n\nconst Grid = ({playlists}) => {\n//   const [playlists, setPlaylists] = useState(null);\n\n//   const getPlaylists = async() => {\n//     try {\n//       await spotify.getUserPlaylists()\n//       .then((playlists) => {\n//         setPlaylists(playlists.items);\n//       });\n//     } catch (e) {\n//         console.log('error in playlist loading', e)\n//     } \n// } \n\n// useEffect(()=> {\n//     spotify.setAccessToken(accessToken);\n//     getPlaylists();\n  \n// }, []);\n\nconsole.log(playlists)\n\n\nreturn (\n  <Wrapper>\n    <Content>\n      {playlists }\n    {playlists.map(playlist => (\n              <Playlist \n                key={playlist.id}\n                name={playlist.name}\n                onClick={\n                  <Link to={`/${playlist.id}`}/> }\n                />\n    ))}\n    </Content>\n  </Wrapper>\n)\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}