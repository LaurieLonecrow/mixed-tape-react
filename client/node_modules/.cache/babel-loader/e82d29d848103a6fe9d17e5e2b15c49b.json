{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js\";\nimport { Link } from \"react-router-dom\";\nimport { Wrapper, Content } from \"./Grid.styles.js\"; // import Playlist from \"../Playlist/index.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  playlists\n}) => {\n  console.log(playlists);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js"],"names":["Link","Wrapper","Content","Grid","playlists","console","log"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC,C,CAEA;;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCC,CA3CD;;KAAMD,I;AA6CN,eAAeA,IAAf","sourcesContent":["import { Link } from \"react-router-dom\";\n\nimport { Wrapper, Content } from \"./Grid.styles.js\";\n\n// import Playlist from \"../Playlist/index.js\";\n\n\nconst Grid = ({playlists}) => {\n\nconsole.log(playlists)\n\nreturn (\n  <Wrapper>\n    <Content>\n\n    {/* {playlists && playlists.length ? (\n        playlists.map((playlist,i) => (\n        <li key={i}>\n          <Link to={`/playlist/${playlist.id}`}>\n            {playlist.images.length && playlist.images[0] && (\n              <img src={playlist.images[0].url} alt={playlist.name} />\n            )}\n            <h1>{playlist.name}</h1>\n        <Link/>\n      <li/>\n    ))) : <p> No Playlists Available</p> } */}\n\n{/* {playlists && playlists.length ? (\n      <>\n        {playlists.map((playlist, i) => (\n          <li className=\"grid__item\" key={i}>\n            <Link className=\"grid__item__inner\" to={`/playlists/${playlist.id}`}>\n              {playlist.images.length && playlist.images[0] && (\n                <div className=\"grid__item__img\">\n                  <img src={playlist.images[0].url} alt={playlist.name} />\n                </div>\n              )}\n              <h3 className=\"grid__item__name overflow-ellipsis\">{playlist.name}</h3>\n              <p className=\"grid__item__label\">Playlist</p>\n            </Link>\n          </li>\n        ))}\n      </>\n    ) : (\n      <p className=\"empty-notice\">No playlists available</p>\n    )} */}\n\n    </Content>\n  </Wrapper>\n)\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}