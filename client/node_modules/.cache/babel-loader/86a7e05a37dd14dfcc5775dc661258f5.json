{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { accessToken } from \"../../config\";\nimport { Wrapper, Content } from \"./Grid.styles.js\";\nimport Playlist from \"../Playlist/index.js\"; // import SpotifyWebApi from \"spotify-web-api-js\";\n// const spotify = new SpotifyWebApi();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = ({\n  playlists\n}) => {\n  //   const [playlists, setPlaylists] = useState(null);\n  //   const getPlaylists = async() => {\n  //     try {\n  //       await spotify.getUserPlaylists()\n  //       .then((playlists) => {\n  //         setPlaylists(playlists.items);\n  //       });\n  //     } catch (e) {\n  //         console.log('error in playlist loading', e)\n  //     } \n  // } \n  // useEffect(()=> {\n  //     spotify.setAccessToken(accessToken);\n  //     getPlaylists();\n  // }, []);\n  console.log(playlists);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: playlists.map((playlist, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"grid__item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"grid__item__inner\",\n          to: `/playlists/${playlist.id}`,\n          children: [playlist.images.length && playlist.images[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: playlist.images[0].url,\n              alt: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"grid__item__name overflow-ellipsis\",\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid__item__label\",\n            children: \"Playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Grid/index.js"],"names":["useState","useEffect","Link","accessToken","Wrapper","Content","Playlist","Grid","playlists","console","log","map","playlist","i","id","images","length","url","name"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AAEA,OAAOC,QAAP,MAAqB,sBAArB,C,CAEA;AACA;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAC9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAGA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,OAAD;AAAA,gBAcHA,SAAS,CAACG,GAAV,CAAc,CAACC,QAAD,EAAWC,CAAX,kBACL;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAoC,UAAA,EAAE,EAAG,cAAaD,QAAQ,CAACE,EAAG,EAAlE;AAAA,qBACGF,QAAQ,CAACG,MAAT,CAAgBC,MAAhB,IAA0BJ,QAAQ,CAACG,MAAT,CAAgB,CAAhB,CAA1B,iBACC;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEH,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBE,GAA7B;AAAkC,cAAA,GAAG,EAAEL,QAAQ,CAACM;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAME;AAAI,YAAA,SAAS,EAAC,oCAAd;AAAA,sBAAoDN,QAAQ,CAACM;AAA7D;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAG,YAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAgCL,CAAhC;AAAA;AAAA;AAAA;AAAA,cADT;AAdG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCC,CAvDD;;KAAMN,I;AAyDN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { accessToken } from \"../../config\"\n\nimport { Wrapper, Content } from \"./Grid.styles.js\";\n\nimport Playlist from \"../Playlist/index.js\";\n\n// import SpotifyWebApi from \"spotify-web-api-js\";\n// const spotify = new SpotifyWebApi();\n\nconst Grid = ({playlists}) => {\n//   const [playlists, setPlaylists] = useState(null);\n\n//   const getPlaylists = async() => {\n//     try {\n//       await spotify.getUserPlaylists()\n//       .then((playlists) => {\n//         setPlaylists(playlists.items);\n//       });\n//     } catch (e) {\n//         console.log('error in playlist loading', e)\n//     } \n// } \n\n// useEffect(()=> {\n//     spotify.setAccessToken(accessToken);\n//     getPlaylists();\n  \n// }, []);\n\nconsole.log(playlists)\n\n\nreturn (\n  <Wrapper>\n    <Content>\n      {/* {playlists && playlists.length ? (\n        playlists.map(playlist => (\n          \n              <Playlist \n                key={playlist.id}\n                name={playlist.name}\n                onClick={\n                  <Link to={`/${console.log(playlist.id)}`}/> }\n                />\n    ))\n    ) : <p> No Playlists Available</p>} */}\n\n\n{playlists.map((playlist, i) => (\n          <li className=\"grid__item\" key={i}>\n            <Link className=\"grid__item__inner\" to={`/playlists/${playlist.id}`}>\n              {playlist.images.length && playlist.images[0] && (\n                <div className=\"grid__item__img\">\n                  <img src={playlist.images[0].url} alt={playlist.name} />\n                </div>\n              )}\n              <h3 className=\"grid__item__name overflow-ellipsis\">{playlist.name}</h3>\n              <p className=\"grid__item__label\">Playlist</p>\n            </Link>\n          </li>\n        ))}\n    </Content>\n  </Wrapper>\n)\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}