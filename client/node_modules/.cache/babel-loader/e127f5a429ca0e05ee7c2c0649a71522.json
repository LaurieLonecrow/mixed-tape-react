{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\"; //components\n\nimport Grid from \"./Grid\";\nimport Header from \"./Header\"; //hoooks\n\nimport { getTokenFromUrl } from \"../hooks/useLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nconst Home = () => {\n  _s();\n\n  const [token, setToken] = useState();\n  const [playlists, setPlaylists] = useState();\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token);\n      getPlaylists();\n    }\n\n    console.log('[token]', token);\n  }, [token]);\n\n  function getPlaylists() {\n    spotify.getUserPlaylists().then(playlists => {\n      setPlaylists(playlists.items);\n    });\n  }\n\n  console.log(playlists);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      playlists: playlists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"e8h+RsUDCmBi6u7fIsB6cSXtBPM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Home.js"],"names":["React","useState","useEffect","SpotifyWebApi","Grid","Header","getTokenFromUrl","spotify","Home","token","setToken","playlists","setPlaylists","hash","window","location","_token","access_token","setAccessToken","getPlaylists","console","log","getUserPlaylists","then","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAGA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;;AAEA,MAAMK,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMW,IAAI,GAAGP,eAAe,EAA5B;AACAQ,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AACA,UAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;AACA,QAAGD,MAAH,EAAW;AACTN,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACAT,MAAAA,OAAO,CAACW,cAAR,CAAuBF,MAAvB;AACAG,MAAAA,YAAY;AACb;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,KAAvB;AAED,GAXQ,EAWN,CAACA,KAAD,CAXM,CAAT;;AAcF,WAASU,YAAT,GAAwB;AACtBZ,IAAAA,OAAO,CAACe,gBAAR,GACGC,IADH,CACSZ,SAAD,IAAe;AACnBC,MAAAA,YAAY,CAACD,SAAS,CAACa,KAAX,CAAZ;AACD,KAHH;AAID;;AAEDJ,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAjCD;;GAAMH,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\n//components\nimport Grid from \"./Grid\";\nimport Header from \"./Header\";\n\n//hoooks\nimport { getTokenFromUrl } from \"../hooks/useLogin\";\n\n\nconst spotify = new SpotifyWebApi();\n\nconst Home = () => {\n  const [token, setToken] = useState();\n  const [playlists, setPlaylists] = useState();\n\n  useEffect(()=> {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if(_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token)\n      getPlaylists();\n    }\n    console.log('[token]', token)\n    \n  }, [token]);\n\n\nfunction getPlaylists() {\n  spotify.getUserPlaylists()\n    .then((playlists) => {\n      setPlaylists(playlists.items);\n    });\n}\n  \nconsole.log(playlists)\n\n  return (\n    <>\n      <Header />\n      <Grid playlists={playlists}/>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}