{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/\";\nconst clientId = \"70187c959b294d23b6bd710c3c916063\";\nconst spotify = new SpotifyWebApi();\nconst scopes = [\"playlist-modify-private\", \"playlist-read-private\", \"playlist-modify-public\", \"playlist-read-collaborative\", \"user-read-playback-state\", \"user-modify-playback-state\", \"app-remote-control\"];\nconst [token, setToken] = useState();\nconst [playlists, setPlaylists] = useState();\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n\nconst getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split(\"&\").reduce((initial, item) => {\n    let parts = item.split(\"=\");\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\n\nuseEffect(() => {\n  const hash = getTokenFromUrl();\n  window.location.hash = \"\";\n  const _token = hash.access_token;\n\n  if (_token) {\n    setToken(_token);\n    spotify.setAccessToken(_token);\n  }\n\n  console.log('[token]', token);\n}, []);\n\nconst getPlaylists = async () => {\n  await spotify.getUserPlaylists().then(playlists => {\n    setPlaylists(playlists.items);\n  });\n};\n\nconsole.log(playlists);","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/hooks/useLogin.js"],"names":["React","useState","useEffect","SpotifyWebApi","authEndpoint","redirectUri","clientId","spotify","scopes","token","setToken","playlists","setPlaylists","loginUrl","join","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","setAccessToken","console","log","getPlaylists","getUserPlaylists","then","items"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,MAAMC,YAAY,GAAG,wCAArB;AACA,MAAMC,WAAW,GAAG,wBAApB;AACA,MAAMC,QAAQ,GAAG,kCAAjB;AAEA,MAAMC,OAAO,GAAG,IAAIJ,aAAJ,EAAhB;AAEA,MAAMK,MAAM,GAAG,CACb,yBADa,EAEb,uBAFa,EAGb,wBAHa,EAIb,6BAJa,EAKb,0BALa,EAMb,4BANa,EAOb,oBAPa,CAAf;AAUA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAGA,OAAO,MAAMY,QAAQ,GAAI,GAAET,YAAa,cAAaE,QAAS,iBAAgBD,WAAY,UAASG,MAAM,CAACM,IAAP,CAC/F,KAD+F,CACxF,uCADJ;;AAIP,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACJC,SADI,CACM,CADN,EAEJC,KAFI,CAEE,GAFF,EAGJC,MAHI,CAGG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACzB,QAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,IAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACA,WAAOF,OAAP;AACD,GAPI,EAOF,EAPE,CAAP;AAQD,CATH;;AAWEpB,SAAS,CAAC,MAAK;AACb,QAAMgB,IAAI,GAAGH,eAAe,EAA5B;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB;AACA,QAAMQ,MAAM,GAAGR,IAAI,CAACS,YAApB;;AACA,MAAGD,MAAH,EAAW;AACThB,IAAAA,QAAQ,CAACgB,MAAD,CAAR;AACAnB,IAAAA,OAAO,CAACqB,cAAR,CAAuBF,MAAvB;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBrB,KAAvB;AACD,CATQ,EASN,EATM,CAAT;;AAYF,MAAMsB,YAAY,GAAG,YAAW;AAC9B,QAAMxB,OAAO,CAACyB,gBAAR,GACHC,IADG,CACGtB,SAAD,IAAe;AACnBC,IAAAA,YAAY,CAACD,SAAS,CAACuB,KAAX,CAAZ;AACD,GAHG,CAAN;AAKD,CAND;;AAOAL,OAAO,CAACC,GAAR,CAAYnB,SAAZ","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000/\";\nconst clientId = \"70187c959b294d23b6bd710c3c916063\";\n\nconst spotify = new SpotifyWebApi();\n\nconst scopes = [\n  \"playlist-modify-private\",\n  \"playlist-read-private\",\n  \"playlist-modify-public\",\n  \"playlist-read-collaborative\",\n  \"user-read-playback-state\",\n  \"user-modify-playback-state\",\n  \"app-remote-control\",\n];\n\nconst [token, setToken] = useState();\nconst [playlists, setPlaylists] = useState();\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n    \"%20\")}&response_type=token&show_dialog=true`;\n\n    \nconst getTokenFromUrl = () => {\n    return window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce((initial, item) => {\n        let parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n        return initial;\n      }, {});\n  };\n\n  useEffect(()=> {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n    if(_token) {\n      setToken(_token);\n      spotify.setAccessToken(_token)\n    }\n    console.log('[token]', token)\n  }, []);\n\n\nconst getPlaylists = async() => {\n  await spotify.getUserPlaylists()\n    .then((playlists) => {\n      setPlaylists(playlists.items);\n    });\n   \n} \nconsole.log(playlists)\n\n"]},"metadata":{},"sourceType":"module"}