{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getTracks } from \"../APIs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tracks = ({\n  playlistId\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [playlistData, setPlaylistData] = useState(null);\n  const [tracksData, setTracksData] = useState(null);\n  const [tracks, setTracks] = useState(null);\n  useEffect(() => {\n    const getPlaylistData = async () => {\n      const playlist = await getTracks(id);\n      setPlaylistData(playlist.data);\n      setTracksData(playlist.data.tracks);\n    };\n\n    getPlaylistData();\n  }, [id]);\n  console.log(playlistData);\n  console.log(tracksData);\n  useEffect(() => {\n    if (!tracksData) {\n      return;\n    }\n\n    set;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"bA7HMTKajb+dIfgXk5tOsjLM6qM=\", false, function () {\n  return [useParams];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js"],"names":["useState","useEffect","useParams","getTracks","Tracks","playlistId","id","playlistData","setPlaylistData","tracksData","setTracksData","tracks","setTracks","getPlaylistData","playlist","data","console","log","set"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,SAAT,QAA0B,SAA1B;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,eAAe,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMX,SAAS,CAACG,EAAD,CAAhC;AACAE,MAAAA,eAAe,CAACM,QAAQ,CAACC,IAAV,CAAf;AACAL,MAAAA,aAAa,CAACI,QAAQ,CAACC,IAAT,CAAcJ,MAAf,CAAb;AACH,KAJD;;AAKAE,IAAAA,eAAe;AAElB,GARQ,EAQP,CAACP,EAAD,CARO,CAAT;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACQ,UAAJ,EAAgB;AAChB;AACH;;AAEDS,IAAAA,GAAG;AACF,GANQ,CAAT;AASJ,sBAEI;AAAA,4BAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALI,eAMI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBC,CA7CD;;GAAMd,M;UACaF,S;;;KADbE,M;AA+CN,eAAeA,MAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getTracks } from \"../APIs\";\n\n\nconst Tracks = ({playlistId}) => {\n    const { id } = useParams();\n    const [playlistData, setPlaylistData] = useState(null);\n    const [tracksData, setTracksData] = useState(null);\n    const [tracks, setTracks] = useState(null);\n\n    \n    useEffect(() => {\n        const getPlaylistData = async () => {\n            const playlist = await getTracks(id);\n            setPlaylistData(playlist.data);\n            setTracksData(playlist.data.tracks)\n        }\n        getPlaylistData();\n\n    },[id]);\n\n    console.log(playlistData)\n    console.log(tracksData)\n\n    useEffect(() => {\n        if(!tracksData) {\n        return;\n    }\n\n    set\n    })\n\n\nreturn (\n\n    <div>\n        {/* This is the main Making a Playlist Page,\n        include Tracks Listings, Inputs areas, and Footer with Player,\n        include ability to change Fonts/Background image */}\n\n<h3>Tracks</h3>\n        <form >\n            <input type=\"text\"/>\n            \n\n        </form>\n    </div>\n\n)\n}\n\nexport default Tracks;"]},"metadata":{},"sourceType":"module"}