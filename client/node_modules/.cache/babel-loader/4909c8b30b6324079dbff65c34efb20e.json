{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios'; //components\n\nimport Form from './Form';\nimport Header from './Header';\nimport { getTracks, getAllText, createText } from \"../APIs\";\nimport Playlist from \"./Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tracks = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [playlistData, setPlaylistData] = useState(null);\n  const [tracksData, setTracksData] = useState(null);\n  const [tracks, setTracks] = useState(null);\n  const [text, setTexts] = useState([]);\n  useEffect(() => {\n    getAllText();\n  }, [text]); //get the playlist Object with track data etc.\n\n  useEffect(() => {\n    const getPlaylistData = async () => {\n      const playlist = await getTracks(id);\n      setPlaylistData(playlist.data);\n      setTracksData(playlist.data.tracks);\n    };\n\n    getPlaylistData();\n  }, [id]); //get track listing and next set of tracks\n\n  useEffect(() => {\n    if (!tracksData) {\n      return;\n    }\n\n    const getMoreTracks = async () => {\n      if (tracksData.next) {\n        const nextTracks = await axios.get(tracksData.next);\n        setTracksData(nextTracks.data);\n      }\n    };\n\n    setTracks(tracks => [...(tracks ? tracks : []), ...tracksData.items]);\n    getMoreTracks();\n  }, [tracksData]);\n  console.log(tracksData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), tracksData ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracksData.items.map((track, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: track.track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: createText,\n          trackId: track.track.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          text: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Tracks Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"roQ7gSHDVaJ52cUcU5Blt8cx+0M=\", false, function () {\n  return [useParams];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js"],"names":["useState","useEffect","useParams","axios","Form","Header","getTracks","getAllText","createText","Playlist","Tracks","id","playlistData","setPlaylistData","tracksData","setTracksData","tracks","setTracks","text","setTexts","getPlaylistData","playlist","data","getMoreTracks","next","nextTracks","get","items","console","log","map","track","i","name"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\n//components\nimport Form from './Form'\nimport Header from './Header'\n\nimport { getTracks, getAllText, createText } from \"../APIs\";\nimport Playlist from \"./Playlist\";\n\n\nconst Tracks = () => {\n    const { id } = useParams();\n    const [playlistData, setPlaylistData] = useState(null);\n    const [tracksData, setTracksData] = useState(null);\n    const [tracks, setTracks] = useState(null);\n    const [text, setTexts]=useState([]);\n\n\n  useEffect(() => {\n    getAllText();\n  },[text])\n\n//get the playlist Object with track data etc.\n    useEffect(() => {\n        const getPlaylistData = async () => {\n            const playlist = await getTracks(id);\n            setPlaylistData(playlist.data);\n            setTracksData(playlist.data.tracks)\n        }\n        getPlaylistData();\n    },[id]);\n\n//get track listing and next set of tracks\n    useEffect(() => {\n        if(!tracksData) {\n        return;\n    }\n    const getMoreTracks = async () => {\n        if (tracksData.next) {\n            const nextTracks = await axios.get(tracksData.next);\n            setTracksData(nextTracks.data)\n        }\n    };\n    setTracks(tracks => ([\n        ...tracks ? tracks : [],\n        ...tracksData.items\n    ]));\n    getMoreTracks()\n    },[tracksData])\n\n    console.log(tracksData)\nreturn (\n\n    <div>\n        <Header/>\n        {/* This is the main Making a Playlist Page,\n        include Tracks Listings, Inputs areas, and Footer with Player,\n        include ability to change Fonts/Background image */}\n        {tracksData ? (\n        <ul>\n            {tracksData.items.map((track, i) => (\n            <li key={i}>\n                <h3>{track.track.name}</h3>\n                <Form onSubmit={createText}\n                      trackId={track.track.id}\n                      \n                       />\n                <Playlist text={text} />\n            </li>))}\n        </ul>\n        ) : <p>No Tracks Available</p>}\n\n    </div>\n\n)\n}\n\nexport default Tracks;"]},"metadata":{},"sourceType":"module"}