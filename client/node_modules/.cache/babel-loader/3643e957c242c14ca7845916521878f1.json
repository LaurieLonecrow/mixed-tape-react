{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { getTracks } from \"../APIs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tracks = ({\n  playlistId\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [playlistData, setPlaylistData] = useState(null);\n  const [tracksData, setTracksData] = useState(null);\n  const [tracks, setTracks] = useState(null); //get the playlist Object with track data etc.\n\n  useEffect(() => {\n    const getPlaylistData = async () => {\n      const playlist = await getTracks(id);\n      setPlaylistData(playlist.data);\n      setTracksData(playlist.data.tracks);\n    };\n\n    getPlaylistData();\n  }, [id]); //get track listing and next set of tracks\n\n  useEffect(() => {\n    if (!tracksData) {\n      return;\n    }\n\n    const getMoreTracks = async () => {\n      if (tracksData.next) {\n        const nextTracks = await axios.get(tracksData.next);\n        setTracksData(nextTracks.data);\n      }\n    };\n\n    setTracks(tracks => [...(tracks ? tracks : []), ...tracksData.items]);\n    getMoreTracks();\n  }, [tracksData]);\n  console.log(playlistData);\n  console.log(tracksData, 'trackdata');\n  console.log(tracksData.items.track[0].name, items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tracks, \"bA7HMTKajb+dIfgXk5tOsjLM6qM=\", false, function () {\n  return [useParams];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/client/src/components/Tracks.js"],"names":["useState","useEffect","useParams","axios","getTracks","Tracks","playlistId","id","playlistData","setPlaylistData","tracksData","setTracksData","tracks","setTracks","getPlaylistData","playlist","data","getMoreTracks","next","nextTracks","get","items","console","log","track","name"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,SAA1B;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC,CAJ6B,CAMjC;;AACIC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,eAAe,GAAG,YAAY;AAChC,YAAMC,QAAQ,GAAG,MAAMX,SAAS,CAACG,EAAD,CAAhC;AACAE,MAAAA,eAAe,CAACM,QAAQ,CAACC,IAAV,CAAf;AACAL,MAAAA,aAAa,CAACI,QAAQ,CAACC,IAAT,CAAcJ,MAAf,CAAb;AACH,KAJD;;AAKAE,IAAAA,eAAe;AAElB,GARQ,EAQP,CAACP,EAAD,CARO,CAAT,CAP6B,CAkBjC;;AACIN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACS,UAAJ,EAAgB;AAChB;AACH;;AACD,UAAMO,aAAa,GAAG,YAAY;AAC9B,UAAIP,UAAU,CAACQ,IAAf,EAAqB;AACjB,cAAMC,UAAU,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUV,UAAU,CAACQ,IAArB,CAAzB;AACAP,QAAAA,aAAa,CAACQ,UAAU,CAACH,IAAZ,CAAb;AACH;AACJ,KALD;;AAMAH,IAAAA,SAAS,CAACD,MAAM,IAAK,CACjB,IAAGA,MAAM,GAAGA,MAAH,GAAY,EAArB,CADiB,EAEjB,GAAGF,UAAU,CAACW,KAFG,CAAZ,CAAT;AAKAJ,IAAAA,aAAa;AAEZ,GAjBQ,EAiBP,CAACP,UAAD,CAjBO,CAAT;AAmBAY,EAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ,EAAwB,WAAxB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACW,KAAX,CAAiBG,KAAjB,CAAuB,CAAvB,EAA0BC,IAAtC,EAA4CJ,KAA5C;AAGJ,sBAEI;AAAA,2BASI;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBC,CA9DD;;GAAMhB,M;UACaH,S;;;KADbG,M;AAgEN,eAAeA,MAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { getTracks } from \"../APIs\";\n\n\nconst Tracks = ({playlistId}) => {\n    const { id } = useParams();\n    const [playlistData, setPlaylistData] = useState(null);\n    const [tracksData, setTracksData] = useState(null);\n    const [tracks, setTracks] = useState(null);\n\n//get the playlist Object with track data etc.\n    useEffect(() => {\n        const getPlaylistData = async () => {\n            const playlist = await getTracks(id);\n            setPlaylistData(playlist.data);\n            setTracksData(playlist.data.tracks)\n        }\n        getPlaylistData();\n\n    },[id]);\n\n    \n//get track listing and next set of tracks\n    useEffect(() => {\n        if(!tracksData) {\n        return;\n    }\n    const getMoreTracks = async () => {\n        if (tracksData.next) {\n            const nextTracks = await axios.get(tracksData.next);\n            setTracksData(nextTracks.data)\n        }\n    };\n    setTracks(tracks => ([\n        ...tracks ? tracks : [],\n        ...tracksData.items\n    ]));\n\n    getMoreTracks()\n\n    },[tracksData])\n\n    console.log(playlistData)\n    console.log(tracksData, 'trackdata')\n    console.log(tracksData.items.track[0].name, items)\n\n\nreturn (\n\n    <div>\n        {/* This is the main Making a Playlist Page,\n        include Tracks Listings, Inputs areas, and Footer with Player,\n        include ability to change Fonts/Background image */}\n\n        {/* <ul>\n        {tracks.map((track, i) => (\n            <li>{track.name}</li>))}\n        </ul> */}\n        <form >\n            <input type=\"text\"/>\n            \n\n        </form>\n    </div>\n\n)\n}\n\nexport default Tracks;"]},"metadata":{},"sourceType":"module"}