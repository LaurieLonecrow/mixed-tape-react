{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Home.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\"; //components\n\nimport Grid from \"./Grid\";\nimport Header from \"./Header\";\nimport Playlist from \"./Playlist\"; //hooks\n\nimport { useLogin } from \"../hooks/useLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nconst Home = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [token, setToken] = useState();\n  const [playlists, setPlaylists] = useState(null);\n\n  const useLogin = () => {\n    _s();\n\n    const getTokenFromUrl = () => {\n      return window.location.hash.substring(1).split(\"&\").reduce((initial, item) => {\n        let parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n        return initial;\n      }, {});\n    };\n\n    useEffect(() => {\n      const hash = getTokenFromUrl();\n      window.location.hash = \"\";\n      const _token = hash.access_token;\n\n      if (_token) {\n        setToken(_token);\n        spotify.setAccessToken(_token);\n      }\n\n      console.log('[token]', token);\n    }, [token]);\n    return {\n      token,\n      setToken\n    };\n  };\n\n  _s(useLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const getPlaylists = async () => {\n    try {\n      await spotify.getUserPlaylists().then(playlists => {\n        setPlaylists(playlists.items);\n      });\n    } catch (e) {\n      console.log('error in playlist loading', e);\n    }\n  };\n\n  console.log(playlists);\n  useEffect(() => {\n    if (token) {\n      getPlaylists();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      playlists: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n        name: playlist.name,\n        tracks: playlist.uri\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Home, \"OJgOolIH7sObbCV8sB02t0Twt4Q=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Home.js"],"names":["useState","useEffect","SpotifyWebApi","Grid","Header","Playlist","useLogin","spotify","Home","token","setToken","playlists","setPlaylists","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","setAccessToken","console","log","getPlaylists","getUserPlaylists","then","items","e","map","playlist","name","uri","id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AAEA,MAAMM,IAAI,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMM,QAAQ,GAAG,MAAM;AAAA;;AAErB,UAAMO,eAAe,GAAG,MAAM;AAC1B,aAAOC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CACJC,SADI,CACM,CADN,EAEJC,KAFI,CAEE,GAFF,EAGJC,MAHI,CAGG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACzB,YAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,QAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACA,eAAOF,OAAP;AACD,OAPI,EAOF,EAPE,CAAP;AAQD,KATH;;AAWEnB,IAAAA,SAAS,CAAC,MAAK;AACb,YAAMe,IAAI,GAAGH,eAAe,EAA5B;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,EAAvB;AACA,YAAMQ,MAAM,GAAGR,IAAI,CAACS,YAApB;;AACA,UAAGD,MAAH,EAAW;AACTd,QAAAA,QAAQ,CAACc,MAAD,CAAR;AACAjB,QAAAA,OAAO,CAACmB,cAAR,CAAuBF,MAAvB;AACD;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBnB,KAAvB;AACD,KATQ,EASN,CAACA,KAAD,CATM,CAAT;AAWF,WAAO;AAACA,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAP;AAEC,GA1BH;;AALiB,KAKXJ,QALW;;AAkCjB,QAAMuB,YAAY,GAAG,YAAW;AAC9B,QAAI;AACF,YAAMtB,OAAO,CAACuB,gBAAR,GACLC,IADK,CACCpB,SAAD,IAAe;AACnBC,QAAAA,YAAY,CAACD,SAAS,CAACqB,KAAX,CAAZ;AACD,OAHK,CAAN;AAID,KALD,CAKE,OAAOC,CAAP,EAAU;AACRN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,CAAzC;AACH;AACJ,GATC;;AAUFN,EAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGQ,KAAH,EAAU;AACRoB,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACpB,KAAD,CAJM,CAAT;AAME,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAIE,SAAS,CAACuB,GAAV,CAAcC,QAAQ,iBACjC,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,QAAQ,CAACC,IAFjB;AAGE,QAAA,MAAM,EAAED,QAAQ,CAACE;AAHnB,SACOF,QAAQ,CAACG,EADhB;AAAA;AAAA;AAAA;AAAA,cADW;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD,CAlED;;IAAM9B,I;;KAAAA,I;AAoEN,eAAeA,IAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\n//components\nimport Grid from \"./Grid\";\nimport Header from \"./Header\";\nimport Playlist from \"./Playlist\";\n\n\n//hooks\nimport { useLogin } from \"../hooks/useLogin\"\n\nconst spotify = new SpotifyWebApi();\n\nconst Home = () => {\n  const [token, setToken] = useState();\n\n  const [playlists, setPlaylists] = useState(null);\n\n  const useLogin = () => {\n       \n    const getTokenFromUrl = () => {\n        return window.location.hash\n          .substring(1)\n          .split(\"&\")\n          .reduce((initial, item) => {\n            let parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            return initial;\n          }, {});\n      };\n    \n      useEffect(()=> {\n        const hash = getTokenFromUrl();\n        window.location.hash = \"\";\n        const _token = hash.access_token;\n        if(_token) {\n          setToken(_token);\n          spotify.setAccessToken(_token)\n        }\n        console.log('[token]', token)\n      }, [token]);\n    \n    return {token, setToken}\n    \n    };\n    \n\n  const getPlaylists = async() => {\n    try {\n      await spotify.getUserPlaylists()\n      .then((playlists) => {\n        setPlaylists(playlists.items);\n      });\n    } catch (e) {\n        console.log('error in playlist loading', e)\n    } \n} \nconsole.log(playlists)\n\nuseEffect(()=> {\n  if(token) {\n    getPlaylists();\n  }\n}, [token]);\n\n  return (\n    <>\n      <Header /> \n      <Grid playlists = {playlists.map(playlist => (\n              <Playlist \n                key={playlist.id}\n                name={playlist.name}\n                tracks={playlist.uri}\n                />\n    ))} \n              />\n\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}