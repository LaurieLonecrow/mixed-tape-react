{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Grid/index.js\";\nimport { Wrapper, Content } from \"./Grid.styles.js\";\nimport Playlist from \"../Playlist/index.js\"; //spotify\n\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nconst Grid = ({\n  playlists\n}) => {\n  const getPlaylistsTracks = async id => {\n    try {\n      await spotify.getPlaylistTracks(id).then(tracks => {\n        setPlaylists(playlists.items);\n      });\n    } catch (e) {\n      console.log('error in playlist loading', e);\n    }\n  };\n\n  console.log(playlists);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n        name: playlist.name,\n        onClick: getPlaylistsTracks(playlist.id)\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/admin/Documents/Web Development/MixedTape/mixed-tape-react/mixed-tape-react/src/components/Grid/index.js"],"names":["Wrapper","Content","Playlist","SpotifyWebApi","spotify","Grid","playlists","getPlaylistsTracks","id","getPlaylistTracks","then","tracks","setPlaylists","items","e","console","log","map","playlist","name"],"mappings":";AAGA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,kBAAjC;AAEA,OAAOC,QAAP,MAAqB,sBAArB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AACA,MAAMC,OAAO,GAAG,IAAID,aAAJ,EAAhB;;AAEA,MAAME,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAE5B,QAAMC,kBAAkB,GAAG,MAAMC,EAAN,IAAa;AACtC,QAAI;AACF,YAAMJ,OAAO,CAACK,iBAAR,CAA0BD,EAA1B,EACLE,IADK,CACCC,MAAD,IAAY;AAChBC,QAAAA,YAAY,CAACN,SAAS,CAACO,KAAX,CAAZ;AACD,OAHK,CAAN;AAID,KALD,CAKE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,CAAzC;AACH;AACJ,GATC;;AAUFC,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,OAAD;AAAA,gBACCA,SAAS,CAACW,GAAV,CAAcC,QAAQ,iBACb,QAAC,QAAD;AAEE,QAAA,IAAI,EAAEA,QAAQ,CAACC,IAFjB;AAGE,QAAA,OAAO,EAAEZ,kBAAkB,CAACW,QAAQ,CAACV,EAAV;AAH7B,SACOU,QAAQ,CAACV,EADhB;AAAA;AAAA;AAAA;AAAA,cADT;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaC,CA3BD;;KAAMH,I;AA6BN,eAAeA,IAAf","sourcesContent":["\n\n\nimport { Wrapper, Content } from \"./Grid.styles.js\";\n\nimport Playlist from \"../Playlist/index.js\";\n\n//spotify\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotify = new SpotifyWebApi();\n\nconst Grid = ({playlists}) => {\n\n  const getPlaylistsTracks = async(id) => {\n    try {\n      await spotify.getPlaylistTracks(id)\n      .then((tracks) => {\n        setPlaylists(playlists.items);\n      });\n    } catch (e) {\n        console.log('error in playlist loading', e)\n    } \n} \nconsole.log(playlists)\n\nreturn (\n  <Wrapper>\n    <Content>\n    {playlists.map(playlist => (\n              <Playlist \n                key={playlist.id}\n                name={playlist.name}\n                onClick={getPlaylistsTracks(playlist.id)}\n                />\n    ))}\n    </Content>\n  </Wrapper>\n)\n};\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}